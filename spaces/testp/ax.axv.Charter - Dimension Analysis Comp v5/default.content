<AnalyticsExplorerView is_init="false" name="Charter - Dimension Analysis Comp v5" description=" ">
  <ModelInfo nextPageId="2" validated="true">
    <GlobalDSRSetting enabled="false"/>
    <GlobalProperties/>
    <GlobalThemeSetting>
      <SelectedTheme theme="{&quot;id&quot;:null,&quot;name&quot;:&quot;Vitria Default Theme&quot;,&quot;label&quot;:&quot;Vitria Default Theme&quot;}"/>
      <TileOpacity opacity="0.8"/>
      <NoTileSpacing value="true"/>
    </GlobalThemeSetting>
    <I18NTab>
      <name value="default"/>
    </I18NTab>
    <TabNavSetting visible="true"/>
    <DWRSetting disable="false"/>
    <CustomCSSSetting><![CDATA[.app .tile .tileContainer .rendererBox .rendererDataGrid{
    height:100%!important;
}

.app .tile .tileContainer .rendererBox .dgrid-scroller{
    overflow-y:auto!important;
}

]]></CustomCSSSetting>
    <Page id="1" name="Default" title="Default" desc="" tabNavVisible="true" panelposition="right" panelstatus="closed" className="commonalityPage">
      <HelpContent><![CDATA[]]></HelpContent>
      <PageCustomCSS><![CDATA[.commonalityPage .dijitButton .dijitButtonNode {
    background: none;
    background-color: transparent;
    color: #2d3538 !important;
    margin-top: -1px;
    border: 1px solid rgba(0,0,0,0.15) !important;
    border-radius: 0px !important;
}

.commonalityPage .overlay-button .dijitButton .dijitButtonNode:hover {
    color: white !important;
    background-color: #92dbff !important;
}

.commonalityPage .click-to-open-div {
    color:#2d3538;
}

.app .smallTile .tileContainer.digiops-commonality-detail {
    padding: 0 10px;
    overflow-x: hidden;
}

/*
.commonalityPage .digiops-commonality .digiops-commonality-main-filter,
.commonalityPage .digiops-commonality .digiops-commonality-alt-filter {
    background-color: transparent !important;
}

.commonalityPage .digiops-commonality .digiops-commonality-main-filter .click-to-open-div {
    padding-top: 8px;
}

.commonalityPage .digiops-commonality .digiops-commonality-main-filter .ok-cancel-div span {
    font-weight: normal;
    text-decoration: none;
}

.commonalityPage .digiops-commonality .digiops-commonality-main-filter span {
    font-size: 14px;
    font-weight: normal;
    color: #2d3538;
    vertical-align: top;
}

.commonalityPage .digiops-commonality .digiops-commonality-main-filter .filterIcon{
    font-size: 20px !important;
    color: #2d3538;
    padding-right: 5px;
}

.commonalityPage .digiops-commonality .digiops-commonality-main-filter .filterArrow {
    color: #2d3538;
    padding-left: 4px;
    font-size: 14px !important;
}

.commonalityPage  .digiops-commonality .digiops-commonality-main-filter {
    padding: 10px 15px 0px 10px !important;
    border: none !important;
    border-bottom: 1px solid #d5d5d5 !important;
    height: calc(100% - 11px) !important;
}





.commonalityPage .dgrid-cell.customCell {
    white-space: nowrap !important;
    word-wrap: normal !important;
    text-overflow: ellipsis;
}

.commonalityPage .tileContainer.rightTile .dgrid-cell.customCell {
    white-space: nowrap !important;
    word-wrap: normal !important;
    text-overflow: ellipsis;
}

.commonalityPage .digiops-commonality-alt-filter {
    padding-top: 5px !important;
}

.commonalityPage .digiops-commonality-main,
.commonalityPage .digiops-commonality-event-type,
.commonalityPage .digiops-commonality-dimension,
.commonalityPage .digiops-commonality-measure,
.commonalityPage .digiops-commonality-related {
    padding: 10px 25px 0 25px !important;   
}

.commonalityPage .digiops-commonality-related {
    padding-top: 20px;   
}

.commonalityPage .digiops-commonality-dimension,
.commonalityPage .digiops-commonality-measure,
.commonalityPage .digiops-commonality-related,
.commonalityPage .digiops-commonality-event-type {
    background-color: #f8f8f8 !important;   
}

.commonalityPage .digiops-commonality-event-type {
    border-top: 5px solid #eaeaeb !important;   
}

.commonalityPage .digiops-commonality-dimension,
.commonalityPage .digiops-commonality-related {
    border-left: 5px solid #eaeaeb !important;   
}

.commonalityPage .dgrid-header .dgrid-cell {
    background: transparent !important;   
}

.commonalityPage .digiops-commonality-time-range, 
.commonalityPage .digiops-commonality-where-clause {
    background-color: #f0f0f0 !important;
    padding: 3px 0 0 10px !important;
    border-bottom: 1px solid #cccccc !important;
    height: calc( 100% - 4px ) !important;
    font-size: 11px;
}

.commonalityPage .digiops-commonality .digiops-commonality-metric-filter .common-plugin.dimension-filter .category-table {
    margin-top: -6px;
    padding: 0px;
    background: #ededed!important;
    border-radius: 0px;
    border-color: #d5d5d5;
}



.commonalityPage .common-plugin.dimension-filter .category-control-value {
    padding: 8px !important;
    padding-top: 5px;
    padding-bottom: 0px;
    white-space: normal;
}

.commonalityPage .digiops-commonality .digiops-commonality-metric-filter .common-plugin.dimension-filter .category-table {
    margin-top: -6px;
}


.digiops-commonality .digiops-commonality-alt-filter .common-plugin.dimension-filter .category-table {
    margin-top: -6px;
    padding: 0px;
    background: transparent !important;
    border-radius: 0px;
}

.digiops-commonality .digiops-commonality-alt-filter {
    background: #d5d5d5 !important;
    border-bottom: 1px solid #d5d5d5 !important;
}

.digiops-commonality .digiops-commonality-metric-filter .common-plugin.dimension-filter .category-table {
    margin-top: -3px;
    padding: 0px;
    background: #d5d5d5 !important;
    border-radius: 0px;
}

.commonalityPage .digiops-commonality .digiops-commonality-metric-filter {
    background: #f0f0f0 !important;
    border-bottom: 1px solid #cccccc !important;
}

.digiops-commonality .dijitButton .dijitButtonNode {
    background: none;
    background-color: transparent;
    color: #333333;
    margin-top: -1px;
    border-color: #333;
}


.digiops-commonality .dijitButton .dijitButtonNode SPAN, 
.digiops-commonality .tileContainer.digiops-commonality-main-filter.filterSummary .dijitButton .dijitButtonNode SPAN {
    color: #333333 !important;
    font-weight: normal;
    padding: 2px 3px 0 3px;
    margin-top: -2px;
    font-size: 12px;
    border-color: #333333 !important;
}

.digiops-commonality .common-plugin.dimension-filter .category-table {
    padding: 10px;
    margin-top: 20px;
    background: rgba(255,255,255,.8) !important;
    border-radius: 10px;
}

.digiops-commonality .common-plugin.dimension-filter .time-interval-control {
    white-space: nowrap;
    padding-top: 2px !important;
    padding-bottom: 1px !important;
    border: none !important;
    background-color: white !important;
    border-bottom: 1px solid #148ac4 !important;
}



.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters .common-plugin.dimension-filter .click-to-open-div {
    padding-top: 8px;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters .ok-cancel-div span {
    font-weight: normal;
    text-decoration: none;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters span {
    font-size: 14px;
    font-weight: normal;
    color: #555555;
    vertical-align: top;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters .filterIcon{
    font-size: 20px !important;
    color: #666666;
    padding-right: 5px;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters .filterArrow {
    color: #666666;
    padding-left: 4px;
    font-size: 20px !important;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filters span {
    font-size: 15px;
    font-weight: normal;
    text-decoration: none;
}

.digiops-commonality .metricTrends .dijitBorderContainer-child SPAN {
    font-size: 20px;
    margin-left: 75px;
}

.digiops-commonality .smallTile .maxTileIcon {
    margin-right: 10px;   
}

.digiops-commonality .demoContent .viewerContent {
    border-top: 1px solid #148ac4;
    background: #d5d7d7;
}

.digiops-commonality .digiops-commonality-main-filter {
    background-color: #d5d5d5 !important;
    white-space: nowrap;
    padding: 12px 15px 11px 15px !important;
    border: none !important;
    height: 100% !important;
}

.digiops-commonality .tileContainer.digiops-commonality-main-filter.filterSummary SPAN {
    color: #333333 !important;
}



.digiops-commonality .maxBox .tileContainer.digiops-commonality-main-filter .rendererBox {
    background-color: #ededed !important;   
    color:#2d3538;
}
.digiops-commonality .digiops-commonality-main-filter .dimension-filter {
    width: calc(100% - 20px) !important;
    text-align: left;
    padding-left: 10px;
    padding-right: 10px;
}
.digiops-commonality .click-to-open-div {
    color:black;
}


.pageFrameLayout.tileSpacing [data-vitria-type="tile"] {
    border: none !important;
}

.digiops-filterBar-container .filterBar {
    background-color: rgba(127,206,255,.25);
    border: 1px solid #7fceff !important;
    border-top: 1px solid #e2f1ff !important;
    border-bottom-left-radius: 7px;
    border-bottom-right-radius: 7px;
    border-top: none;
}

.digiops-filterBar-container .filterBar.left {
    border-bottom-right-radius: 0px;
}

.digiops-filterBar-container .filterBar.right {
    border-bottom-left-radius: 0px;
}

.digiops-filterBar-container .tile {
    background-color: transparent !important;
    background: transparent !important;
}

.digiops-filterBar-container .filterBar,
.digiops-filterBar-container .filterBar .tileHolder,
.digiops-filterBar-container .filterBar .tileHolder .tile.tileWidgetContainer.smallTile {
    height: 54px;
}
*/

.demoContent .commonalityPage .common-plugin.dimension-filter .dimension-table-anomaly-metric {
    margin-top: 0px !important;
} 

.commonalityPage .dgrid .dgrid-cell.dgridBarCell .valueBar {
    border-radius: 5px !important;
    background-color: #148ac4 !important;
}

.commonalityPage .dgrid .dgrid-row {
    border: none;
    border-top: 1px solid transparent !important;
    border-bottom: 1px solid transparent !important;
}

.commonalityPage .daMeasurePopup .dgrid .dgrid-row {
    border: none !important;   
}

.commonalityPage .dgrid  .dgrid-row-even {
    border-color: #f5f5f5 !important;   
}

.commonalityPage .dgrid-row:hover {
    border-color: #148ac4 !important;
    background-color: transparent !important;
}

.commonalityPage .dgrid  .dgrid-row-even table {
    background-color: #f5f5f5 !important;
}

.commonalityPage .dgrid-selected.ui-state-active table {
    background-color: #92DBFF !important;
}

.app .commonalityPage .smallTile .tileContainer {
    padding-left: 0px;
    padding-right: 0px;
    padding-bottom: 0px;
}

.app .commonalityPage .smallTile .tileContainer.digiops-commonality-items {
    padding-left: 10px;
    border-top: 20px solid #f1f2f2;
    border-bottom: 10px solid #f1f2f2;
    border-left: 20px solid #f1f2f2;
    border-right: 10px solid #f1f2f2;
}

.app .commonalityPage .smallTile .tileContainer.digiops-commonality-dimension {
    padding-left: 10px;
    border-top: 20px solid #f1f2f2;
    border-bottom: 10px solid #f1f2f2;
    border-left: 10px solid #f1f2f2;
    border-right: 10px solid #f1f2f2;
}

.app .commonalityPage .smallTile .tileContainer.digiops-commonality-measure {
    padding-left: 10px;
    border-top: 20px solid #f1f2f2;
    border-bottom: 10px solid #f1f2f2;
    border-left: 10px solid #f1f2f2;
    border-right: 20px solid #f1f2f2;
}

.app .commonalityPage .smallTile .tileContainer.digiops-commonality-apex {
    padding-left: 10px;
    border-top: 10px solid #f1f2f2;
    border-bottom: 20px solid #f1f2f2;
    border-left: 20px solid #f1f2f2;
    border-right: 10px solid #f1f2f2;
}

.app .commonalityPage .smallTile .tileContainer.digiops-commonality-breakdown .digiops-commonality-breakdown {
    padding-left: 10px;
    border-top: 10px solid #f1f2f2;
    border-bottom: 20px solid #f1f2f2;
    border-left: 10px solid #f1f2f2;
    border-right: 20px solid #f1f2f2;
}]]></PageCustomCSS>
      <PageProperties/>
      <Layout type="10" numRow="1" numCol="1" count="1" templateType="1" screenHeight="1080" renderType="null" positions="[{&quot;data_col&quot;:1,&quot;data_row&quot;:1,&quot;data_sizex&quot;:120,&quot;data_sizey&quot;:72,&quot;id&quot;:0,&quot;title&quot;:&quot;Main Tile&quot;}]" unitSize="{&quot;x&quot;:11.083333333333334,&quot;y&quot;:9.097222222222221}" viewRows="72" viewCols="120"/>
      <Tile name="Main Tile" title="Main Tile" desc="" hideEmptyTile="false" previewSize="15" type="Independent" style="small" sampleData="false" className="trendHeader fontawesomeFilter" parentSelect="false" advancedConfig="false" advancedDisable="true" allowFullscreen="false">
        <DataSource category="#NONE" id="undefined" untyped="true" name="#NONE" label="(not configured)"/>
        <LabelStyle><![CDATA[{"display":"none"}]]></LabelStyle>
        <DataViewer name="ax.DashboardView" label="Dashboard View" optional="false" minimode="false">
          <Property name="model" value="/app/ax/user/viaops_admin/axv/VIAOps - Commonality Comp"/>
          <Ports/>
        </DataViewer>
      </Tile>
    </Page>
    <DataFlow showFooter="true">
      <Item id="node:1" type="UserScript" label="Script 0" _undefined_title="" originHeight="100" width="140" height="217" x="480" y="120">
        <dynIn id="din:0" type="any" label="Values" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any" label="Config" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="string" label="Lang" propagate="always" _isArray="true"/>
        <dynOut id="dout:2" type="any[]" label="Primary Filter" propagate="always" _isArray="true"/>
        <dynOut id="dout:3" type="any[]" label="Secondary Filter" propagate="always" _isArray="true"/>
        <dynOut id="dout:4" type="any" label="Primary Notify" propagate="always" _isArray="true"/>
        <dynOut id="dout:5" type="any" label="Secondary Notify" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:2" type="Tile" label="Tile 0" _undefined_title="" originHeight="160" width="200" height="200" x="733" y="100">
        <dynIn id="din:Config" type="any" label="Config" _undefined_default="" evaluate="always" _isArray="true"/>
        <dynIn id="din:Lang" type="string" label="Lang" _undefined_default="" evaluate="always" _isArray="true"/>
        <dynIn id="din:Primary Filter" type="any[]" label="Primary Filter" _undefined_default="" evaluate="always" _isArray="true"/>
        <dynIn id="din:Secondary Filter" type="any[]" label="Secondary Filter" _undefined_default="" evaluate="always" _isArray="true"/>
        <dynIn id="din:Primary Notify" type="any" label="Primary Notify" _undefined_default="" evaluate="always" _isArray="true"/>
        <dynIn id="din:Secondary Notify" type="any" label="Secondary Notify" _undefined_default="" evaluate="always" _isArray="true"/>
      </Item>
      <Item id="node:5" type="UserScript" label="Script 1" _undefined_title="" originHeight="100" width="130" height="100" x="280" y="120">
        <dynIn id="din:0" type="any[]" label="Context" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any" label="Notify" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:7" type="UserScript" label="Script 2" _undefined_title="" originHeight="100" width="160" height="117" x="1020" y="100">
        <dynIn id="din:0" type="any[]" label="Selection" evaluate="always" _isArray="true"/>
        <dynIn id="din:1" type="any[]" label="UI Event" evaluate="always" _isArray="true"/>
        <dynOut id="dout:0" type="any[]" label="Nav Event" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:14" type="PortIn" label="Port IN 1" _undefined_title="" originHeight="160" width="140" height="177" x="53" y="100">
        <dynOut id="dout:0" type="any[]" label="Context" propagate="always" _isArray="true"/>
        <dynOut id="dout:1" type="any[]" label="FrameMenuSelection" propagate="always" _isArray="true"/>
      </Item>
      <Item id="node:15" type="PortOut" label="Port OUT 1" _undefined_title="" originHeight="160" width="140" height="177" x="1280" y="40"/>
      <Link srcId="node:7" srcPort="dout:0" tgtId="node:15" tgtPort="in:3"/>
      <Link srcId="node:1" srcPort="dout:5" tgtId="node:2" tgtPort="din:Secondary Notify"/>
      <Link srcId="node:1" srcPort="dout:4" tgtId="node:2" tgtPort="din:Primary Notify"/>
      <Link srcId="node:5" srcPort="dout:0" tgtId="node:1" tgtPort="din:0"/>
      <Link srcId="node:1" srcPort="dout:1" tgtId="node:2" tgtPort="din:Lang"/>
      <Link srcId="node:1" srcPort="dout:0" tgtId="node:2" tgtPort="din:Config"/>
      <Link srcId="node:1" srcPort="dout:3" tgtId="node:2" tgtPort="din:Secondary Filter"/>
      <Link srcId="node:1" srcPort="dout:2" tgtId="node:2" tgtPort="din:Primary Filter"/>
      <Link srcId="node:2" srcPort="out:3" tgtId="node:7" tgtPort="din:1"/>
      <Link srcId="node:2" srcPort="out:0" tgtId="node:7" tgtPort="din:0"/>
      <Link srcId="node:14" srcPort="dout:0" tgtId="node:5" tgtPort="din:0"/>
      <Input key="node:1/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portLabel&quot;:&quot;Config&quot;,&quot;portTrigger&quot;:&quot;change&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portValue&quot;:&quot;&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portLabel&quot;:&quot;Lang&quot;,&quot;portTrigger&quot;:&quot;change&quot;,&quot;portType&quot;:&quot;string&quot;,&quot;portValue&quot;:&quot;&quot;},{&quot;portId&quot;:&quot;dout:2&quot;,&quot;portLabel&quot;:&quot;Primary Filter&quot;,&quot;portTrigger&quot;:&quot;change&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portValue&quot;:&quot;&quot;},{&quot;portId&quot;:&quot;dout:3&quot;,&quot;portLabel&quot;:&quot;Secondary Filter&quot;,&quot;portTrigger&quot;:&quot;change&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portValue&quot;:&quot;&quot;},{&quot;portId&quot;:&quot;dout:4&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;Primary Notify&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;change&quot;},{&quot;portId&quot;:&quot;dout:5&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;Secondary Notify&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;change&quot;}]"/>
      <Input key="node:1/cfg:model/default" value="&quot;var CharterPlugin = Plugin(\&quot;Charter\&quot;);\nvar DimensionService = Plugin(\&quot;Dimension\&quot;);\n\nfunction mapDimensionWhereClauseToFilter(evt, callback)\n{\n    if (evt &amp;&amp; evt.values &amp;&amp; evt.values[\&quot;$.dimensionWhereClause\&quot;] != null) {\n        DimensionService.mapDimensionWhereClauseToFilter(evt.values, function(response) {\n            if (response.status == \&quot;OK\&quot;) {\n                evt.values = response.value;\n            }\n            callback(evt);\n        });\n    }\n    else {\n        callback(evt);\n    }\n}\n\nif (port == \&quot;din:0\&quot;) {\n    // received values\n    // check if we have been initialized...\n    if (getOutput(\&quot;dout:0\&quot;) != null) {\n        // initialized... pass values thru\n        mapDimensionWhereClauseToFilter(getInput(\&quot;din:0\&quot;), function(evt) {\n            if (evt &amp;&amp; evt.values) {\n                setOutput(\&quot;dout:4\&quot;, evt);\n                // no need to send notify to secondary filter as it is synced to primary\n            }\n        });\n    }\n}\nelse {\n    // on initialization\n    var config = {\n        \&quot;locale\&quot; : \&quot;en-US\&quot;,\n        \&quot;primary-filter-config\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : CharterPlugin[\&quot;$uri\&quot;] + \&quot;/getFilterConfig\&quot;,\n            \&quot;params\&quot; : {\n                \&quot;name\&quot; : \&quot;full\&quot;\n            }\n        },\n        \&quot;secondary-filter-config\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : CharterPlugin[\&quot;$uri\&quot;] + \&quot;/getFilterConfig\&quot;,\n            \&quot;params\&quot; : {\n                \&quot;name\&quot; : \&quot;mini\&quot;\n            }\n        },\n        \&quot;commonalities-config\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : DimensionService[\&quot;$uri\&quot;] + \&quot;/getCommonalities\&quot;,\n            \&quot;cancel-url\&quot; : DimensionService[\&quot;$uri\&quot;] + \&quot;/abortSQLQuery\&quot;\n        },\n        \&quot;#drilldown-config\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : \&quot;/app/dbp/user/viaops_admin/dbpm/VIAOps - Commonality Service/getDrilldownConfig\&quot;\n        },\n        \&quot;#hover-config\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : \&quot;/app/dbp/user/viaops_admin/dbpm/VIAOps - Commonality Service/getHoverConfig\&quot;\n        },\n        \&quot;get-where-clause\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : DimensionService[\&quot;$uri\&quot;] + \&quot;/getWhereClause\&quot;\n        },\n        \&quot;get-time-range\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : DimensionService[\&quot;$uri\&quot;] + \&quot;/getTimeRange\&quot;\n        },\n        \&quot;check-filters\&quot; : {\n            \&quot;method\&quot; : \&quot;POST\&quot;,\n            \&quot;url\&quot; : DimensionService[\&quot;$uri\&quot;] + \&quot;/checkFilters\&quot;\n        },\n        \&quot;action-buttons\&quot; : [\n            {\n                \&quot;value\&quot; : \&quot;trend\&quot;,\n                \&quot;label\&quot; : \&quot;Trend Analysis\&quot;,\n                \&quot;selected\&quot; : {\n                    \&quot;min\&quot; : 1,\n                    \&quot;max\&quot; : 1000\n                }\n            },\n            {\n                \&quot;value\&quot; : \&quot;anomaly\&quot;,\n                \&quot;label\&quot; : \&quot;Incident Lab\&quot;,\n                \&quot;selected\&quot; : {\n                    \&quot;min\&quot; : 1,\n                    \&quot;max\&quot; : 1000\n                }\n            }\n        ],\n        \&quot;locales\&quot; : [{\n            \&quot;code\&quot; : \&quot;en\&quot;,\n            \&quot;url\&quot;  : DimensionService[\&quot;$uri\&quot;] + \&quot;/en\&quot;\n        }],\n        \&quot;hide-computed-measures\&quot; : {\n            \&quot;_baseline/value\&quot;    : true,\n            \&quot;_pBaseline/percent\&quot; : true,\n            \&quot;_pctDev/percent\&quot;    : true\n        }\n    };\n    setOutput(\&quot;dout:0\&quot;, config);\n    setOutput(\&quot;dout:1\&quot;, \&quot;en\&quot;);\n    setOutput(\&quot;dout:2\&quot;, null);\n    setOutput(\&quot;dout:3\&quot;, null);\n    mapDimensionWhereClauseToFilter(getInput(\&quot;din:0\&quot;), function(evt) {\n        if (evt &amp;&amp; evt.values) {\n            setOutput(\&quot;dout:4\&quot;, evt);\n            // no need to send notify to secondary filter as it is synced to primary\n        }\n    });\n}\n&quot;"/>
      <Input key="node:2/cfg:tile/default" value="[{&quot;id&quot;:&quot;ROOT#1#Main Tile&quot;,&quot;path&quot;:[&quot;Default&quot;],&quot;name&quot;:&quot;Main Tile&quot;}]"/>
      <Input key="node:1/cfg:schema/default" value="&quot;&quot;"/>
      <Input key="node:5/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;Context&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:5/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;Notify&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:5/cfg:model/default" value="&quot;if (port != null) {\n    var context = getInput(port);\n    if (context != null &amp;&amp; context.target == \&quot;dimensionAnalysis\&quot; &amp;&amp; context.filters != null) {\n        var evt = {\n            values : {\n            }\n        };\n        for (var i=0; i&lt;context.filters.length; i++) {\n            evt.values[context.filters[i][\&quot;name\&quot;]] = context.filters[i][\&quot;value\&quot;];\n        }\n        console.debug(\&quot;#### Charter Commonality Comp v1/Script 1 ####\&quot;);\n        console.debug(evt);\n        setOutput(\&quot;dout:0\&quot;, evt);\n    }\n}&quot;"/>
      <Input key="node:1/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;any&quot;,&quot;portLabel&quot;:&quot;Values&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:7/cfg:inPorts/default" value="[{&quot;portId&quot;:&quot;din:0&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;Selection&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;ignore&quot;},{&quot;portId&quot;:&quot;din:1&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;UI Event&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:7/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;Nav Event&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:7/cfg:model/default" value="&quot;var CharterPlugin = Plugin(\&quot;Charter\&quot;);\n\nfunction getFilterByName(filters, name)\n{\n    for (var i=0; i&lt;filters.length; i++) {\n        if (filters[i][\&quot;name\&quot;] == name) return filters[i];\n    }\n    return null;\n}\n\nfunction updateFilterValue(filters, existingFilter, newFilterName, newFilterValue)\n{\n    if (existingFilter != null) {\n        if (existingFilter.value != null) {\n            if (Array.isArray(existingFilter.value)) {\n                // add to array\n                if (existingFilter.value.indexOf(newFilterValue) == -1) {\n                    existingFilter.value.push(newFilterValue);\n                }\n            }\n            else if (existingFilter.value != newFilterValue) {\n                existingFilter.value = [existingFilter.value, newFilterValue];\n            }\n        }\n        else {\n            existingFilter.value = [newFilterValue];\n        }\n    }\n    else {\n        filters.push({\n            name : newFilterName,\n            value : [newFilterValue]\n        });\n    }\n}\n\nfunction avCannotAnalyzeMultiple(type, values)\n{\n    message(\&quot;error\&quot;, \&quot;Alert\&quot;, \&quot;Incident Lab cannot analyze multiple \&quot; + type + \&quot;: \&quot; + values.join(\&quot;, \&quot;), function(value) {\n        // ok\n    });\n}\n\nif (port != null) {\n    var uievents = getInput(\&quot;din:1\&quot;) || [];\n    if (uievents.length == 1) {\n        switch (uievents[0][\&quot;__TYPE__\&quot;]) {\n            case \&quot;DigiOpsFilterChange\&quot;:\n                //detect filter change - push context\n                var filters = [];\n                if (uievents[0][\&quot;__EVENT__\&quot;][\&quot;filters\&quot;] != null &amp;&amp; uievents[0][\&quot;__EVENT__\&quot;][\&quot;filters\&quot;].length &gt; 0) {\n                    filters = uievents[0][\&quot;__EVENT__\&quot;][\&quot;filters\&quot;];\n                }\n                CharterPlugin.getContextInfo(\&quot;Dimension Analysis\&quot;, filters, function(evt) {\n                    setOutput(\&quot;dout:0\&quot;, [evt]);\n                });\n                break;\n            case \&quot;DigiOpsButtonAction\&quot;:\n                var selection = getInput(\&quot;din:0\&quot;) || [];\n                if ((uievents[0][\&quot;__VALUE__\&quot;] == \&quot;trend\&quot; || uievents[0][\&quot;__VALUE__\&quot;] == \&quot;anomaly\&quot;) &amp;&amp; selection.length &gt; 0) {\n                    var filters = lang.clone(selection[0][\&quot;__FILTERS__\&quot;]);\n                    var service = [];\n                    var timeRange = getFilterByName(filters, \&quot;data.timeRange\&quot;);\n                    if (timeRange != null) timeRange = timeRange.value;\n                    var predefined = getFilterByName(filters, \&quot;data.predefined\&quot;);\n                    if (predefined != null) predefined = predefined.value;\n                    // UI-166\n                    var resetFilterValue = {};\n                    for (var i=0; i&lt;selection.length; i++) {\n                        var record = selection[i];\n                        var eventFilters = record[\&quot;_eventFilters\&quot;];\n                        if (eventFilters != null &amp;&amp; eventFilters != \&quot;\&quot;) {\n                            eventFilters = JSON.parse(eventFilters);\n                            for (var j=0; j&lt;eventFilters.length; j++) {\n                                var eventFilter = eventFilters[j];\n                                var filter = getFilterByName(filters, eventFilter.name);\n                                if (filter != null &amp;&amp; resetFilterValue[eventFilter.name] == null) {\n                                    // UI-166: for first one, empty so that we replace\n                                    filter.value = [];\n                                    resetFilterValue[eventFilter.name] = true;\n                                }\n                                if (Array.isArray(eventFilter.value)) {\n                                    for (var k=0; k&lt;eventFilter.value.length; k++) {\n                                        updateFilterValue(filters, filter, eventFilter.name, eventFilter.value[k]);\n                                    }\n                                }\n                                else {\n                                    updateFilterValue(filters, filter, eventFilter.name, eventFilter.value);\n                                }\n                            }\n                        }\n                        var filterName = record[\&quot;_filterName\&quot;];\n                        var filterValue = record[\&quot;_value\&quot;];\n                        if (filterName != null &amp;&amp; filterName != \&quot;\&quot; &amp;&amp; filterValue != null) {\n                            if (filterName.indexOf(\&quot;|\&quot;) != -1) {\n                                // UI-372: handling compound dimensions\n                                filterName = filterName.split(\&quot;|\&quot;);\n                                filterValue = filterValue.split(\&quot;|\&quot;);\n                                if (filterName.length == filterValue.length) {\n                                    for (var j=0; j&lt;filterName.length; j++) {\n                                        var filter = getFilterByName(filters, filterName[j]);\n                                        if (filter != null &amp;&amp; resetFilterValue[filterName[j]] == null) {\n                                            // UI-166: for first one, empty so that we replace\n                                            filter.value = [];\n                                            resetFilterValue[filterName[j]] = true;\n                                        }\n                                        updateFilterValue(filters, filter, filterName[j], filterValue[j]);\n                                    }\n                                }\n                            }\n                            else {\n                                var filter = getFilterByName(filters, filterName);\n                                if (filter != null &amp;&amp; resetFilterValue[filterName] == null) {\n                                    // UI-166: for first one, empty so that we replace\n                                    filter.value = [];\n                                    resetFilterValue[filterName] = true;\n                                }\n                                updateFilterValue(filters, filter, filterName, filterValue);\n                            }\n                        }\n                    }\n                    var category = \&quot;*\&quot;;\n                    var timeLabel = CharterPlugin.getTimeLabel(predefined, timeRange);\n                    var evt = null;\n                    switch (uievents[0][\&quot;__VALUE__\&quot;]) {\n                        case \&quot;trend\&quot;:\n                            evt = CharterPlugin.getNavEvent(\&quot;dimensionAnalysis\&quot;, \&quot;trendAnalysis\&quot;, filters);\n                            break;\n                        case \&quot;anomaly\&quot;:\n                            // check for SINGLE svc, comp, app, metric for AV\n                            var svc = getFilterByName(filters, \&quot;data.svc\&quot;);\n                            if (svc.value.length &gt; 1) {\n                                avCannotAnalyzeMultiple(\&quot;services\&quot;, svc.value);\n                                return;\n                            }\n                            var comp = getFilterByName(filters, \&quot;data.comp\&quot;);\n                            if (comp.value.length &gt; 1) {\n                                avCannotAnalyzeMultiple(\&quot;sub-services\&quot;, comp.value);\n                                return;\n                            }\n                            var app = getFilterByName(filters, \&quot;data.app\&quot;);\n                            if (app.value.length &gt; 1) {\n                                avCannotAnalyzeMultiple(\&quot;components\&quot;, app.value);\n                                return;\n                            }\n                            var metric = getFilterByName(filters, \&quot;data.metric\&quot;);\n                            if (metric.value.length &gt; 1) {\n                                avCannotAnalyzeMultiple(\&quot;metrics\&quot;, metric.value);\n                                return;\n                            }\n                            evt = CharterPlugin.getNavEvent(\&quot;dimensionAnalysis\&quot;, \&quot;anomalyAnalysis\&quot;, filters);\n                            break;\n                    }\n                    if (evt != null) {\n                        setOutput(\&quot;dout:0\&quot;, evt);\n                    }\n                }\n                break;\n        }\n    }\n}&quot;"/>
      <Input key="node:2/in:0/evaluate" value="&quot;always&quot;"/>
      <Input key="node:14/cfg:outPorts/default" value="[{&quot;portId&quot;:&quot;dout:0&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;Context&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;},{&quot;portId&quot;:&quot;dout:1&quot;,&quot;portType&quot;:&quot;any[]&quot;,&quot;portLabel&quot;:&quot;FrameMenuSelection&quot;,&quot;portValue&quot;:&quot;&quot;,&quot;portTrigger&quot;:&quot;always&quot;}]"/>
      <Input key="node:15/cfg:inPorts/default" value="[]"/>
      <Input key="node:15/in:3/evaluate" value="&quot;always&quot;"/>
      <Schema id="node:2/out:0">
        <JSON value="{&quot;name&quot;:&quot;_eventType&quot;,&quot;label&quot;:&quot;Event Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_eventLabel&quot;,&quot;label&quot;:&quot;Event Label&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_name&quot;,&quot;label&quot;:&quot;Column Name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_label&quot;,&quot;label&quot;:&quot;Dimension Name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_value&quot;,&quot;label&quot;:&quot;Dimension Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_count&quot;,&quot;label&quot;:&quot;Count&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_baseline&quot;,&quot;label&quot;:&quot;Baseline&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_diff&quot;,&quot;label&quot;:&quot;Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_diffPct&quot;,&quot;label&quot;:&quot;Percentage Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pBaseline&quot;,&quot;label&quot;:&quot;Baseline Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pTotal&quot;,&quot;label&quot;:&quot;Total Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_relDiff&quot;,&quot;label&quot;:&quot;Relative Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pctDev&quot;,&quot;label&quot;:&quot;Deviation Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_metric&quot;,&quot;label&quot;:&quot;Metric&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_metricText&quot;,&quot;label&quot;:&quot;Metric Text&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
      </Schema>
      <Schema id="node:7/din:0">
        <JSON value="{&quot;name&quot;:&quot;_eventType&quot;,&quot;label&quot;:&quot;Event Type&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_eventLabel&quot;,&quot;label&quot;:&quot;Event Label&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_name&quot;,&quot;label&quot;:&quot;Column Name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_label&quot;,&quot;label&quot;:&quot;Dimension Name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_value&quot;,&quot;label&quot;:&quot;Dimension Value&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_count&quot;,&quot;label&quot;:&quot;Count&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_baseline&quot;,&quot;label&quot;:&quot;Baseline&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_diff&quot;,&quot;label&quot;:&quot;Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_diffPct&quot;,&quot;label&quot;:&quot;Percentage Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pBaseline&quot;,&quot;label&quot;:&quot;Baseline Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pTotal&quot;,&quot;label&quot;:&quot;Total Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_relDiff&quot;,&quot;label&quot;:&quot;Relative Difference&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_pctDev&quot;,&quot;label&quot;:&quot;Deviation Proportion&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_metric&quot;,&quot;label&quot;:&quot;Metric&quot;,&quot;type&quot;:&quot;number&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
        <JSON value="{&quot;name&quot;:&quot;_metricText&quot;,&quot;label&quot;:&quot;Metric Text&quot;,&quot;type&quot;:&quot;string&quot;,&quot;_isKey&quot;:false,&quot;_isDimension&quot;:false,&quot;_isMeasure&quot;:false,&quot;_isTimestamp&quot;:false}"/>
      </Schema>
      <DynInput id="node:2">
        <Port id="din:Config" type="any" label="Config" _undefined_default="" evaluate="always"/>
        <Port id="din:Lang" type="string" label="Lang" _undefined_default="" evaluate="always"/>
        <Port id="din:Primary Filter" type="any[]" label="Primary Filter" _undefined_default="" evaluate="always"/>
        <Port id="din:Secondary Filter" type="any[]" label="Secondary Filter" _undefined_default="" evaluate="always"/>
        <Port id="din:Primary Notify" type="any" label="Primary Notify" _undefined_default="" evaluate="always"/>
        <Port id="din:Secondary Notify" type="any" label="Secondary Notify" _undefined_default="" evaluate="always"/>
      </DynInput>
      <DynInput id="node:5">
        <Port id="din:0" type="any[]" label="Context" evaluate="always" _isArray="true"/>
      </DynInput>
      <DynInput id="node:1">
        <Port id="din:0" type="any" label="Values" evaluate="always" _isArray="true"/>
      </DynInput>
      <DynInput id="node:7">
        <Port id="din:0" type="any[]" label="Selection" evaluate="always" _isArray="true"/>
        <Port id="din:1" type="any[]" label="UI Event" evaluate="always" _isArray="true"/>
      </DynInput>
      <DynOutput id="node:1">
        <Port id="dout:0" type="any" label="Config" propagate="always" _isArray="true"/>
        <Port id="dout:1" type="string" label="Lang" propagate="always" _isArray="true"/>
        <Port id="dout:2" type="any[]" label="Primary Filter" propagate="always" _isArray="true"/>
        <Port id="dout:3" type="any[]" label="Secondary Filter" propagate="always" _isArray="true"/>
        <Port id="dout:4" type="any" label="Primary Notify" propagate="always" _isArray="true"/>
        <Port id="dout:5" type="any" label="Secondary Notify" propagate="always" _isArray="true"/>
      </DynOutput>
      <DynOutput id="node:5">
        <Port id="dout:0" type="any" label="Notify" propagate="always"/>
      </DynOutput>
      <DynOutput id="node:7">
        <Port id="dout:0" type="any[]" label="Nav Event" propagate="always" _isArray="true"/>
      </DynOutput>
      <DynOutput id="node:14">
        <Port id="dout:0" type="any[]" label="Context" propagate="always" _isArray="true"/>
        <Port id="dout:1" type="any[]" label="FrameMenuSelection" propagate="always" _isArray="true"/>
      </DynOutput>
      <Version id="node:1" version="2"/>
      <Version id="node:2" version="1"/>
      <Version id="node:5" version="2"/>
      <Version id="node:7" version="2"/>
      <Version id="node:14" version="1"/>
      <Version id="node:15" version="1"/>
      <Version type="Aggregate" version="1"/>
      <Version type="Columns" version="1"/>
      <Version type="DynPivot" version="1"/>
      <Version type="Filter" version="1"/>
      <Version type="Footer" version="1"/>
      <Version type="GeoJsonOverlay" version="1"/>
      <Version type="RestQuery" version="1"/>
      <Version type="Group" version="1"/>
      <Version type="Header" version="1"/>
      <Version type="GeoHeatMapOverlay" version="1"/>
      <Version type="Join" version="1"/>
      <Version type="LocalStore" version="2"/>
      <Version type="MenuBar" version="1"/>
      <Version type="ModelMeta" version="1"/>
      <Version type="ToolbarOverlay" version="3"/>
      <Version type="WidgetOverlay" version="1"/>
      <Version type="Pivot" version="1"/>
      <Version type="Widget" version="1"/>
      <Version type="PortIn" version="1"/>
      <Version type="PortOut" version="1"/>
      <Version type="GlobalProperty" version="3"/>
      <Version type="PutData" version="1"/>
      <Version type="ResourceMeta" version="1"/>
      <Version type="Rows" version="1"/>
      <Version type="UserScript" version="2"/>
      <Version type="Sort" version="1"/>
      <Version type="SQL" version="2"/>
      <Version type="SQLConnect" version="1"/>
      <Version type="DwrMessage" version="1"/>
      <Version type="GeoEditableOverlay" version="1"/>
      <Version type="GeoOverlay" version="2"/>
      <Version type="TextAnnotations" version="1"/>
      <Version type="Tile" version="1"/>
      <Version type="Union" version="1"/>
      <Version type="ScriptVariable" version="1"/>
    </DataFlow>
    <DashboardPlugins>
      <DashboardPlugin uri="/app/dbp/space/testp/dbpm/Charter - Plugin v11" alias="Charter"/>
      <DashboardPlugin uri="/app/dbp/space/testp/dbpm/Charter - Dimension Analysis Service v5" alias="Dimension"/>
    </DashboardPlugins>
  </ModelInfo>
</AnalyticsExplorerView>
