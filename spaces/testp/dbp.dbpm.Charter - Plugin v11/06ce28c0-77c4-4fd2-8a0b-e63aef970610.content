[
    {
        "name"          : "video",
        "label"         : "STVA Metric Dimensions",
        "name-style"    : "padding-left:0px;width:0px;",
        "value-style"   : "padding:0px;width:100%;",
        "display"       : "return helper.has(${data.svc}, ['Video']);",
        "dimensions" : [{
            "name"      : "device",
            "label"     : "Devices",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of devices",
                "dialog/title"                      : "Build device list",
                "dialog/description"                : "Build list of devices to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Device"]
                }
            },
            "default" : []
            }, {
            "name"      : "version",
            "label"     : "Versions",
            "dependent" : ["video.device"],
            "enable"    : "return helper.has(${data.svc}, ['Video']) && helper.isSet(${video.device})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of device-dependent versions",
                "dialog/title"                      : "Build version list",
                "dialog/description"                : "Build list of versions to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Version"]
                }
            },
            "default" : []
            }, {
            "name"      : "conn",
            "label"     : "Connections",
            "dependent" : ["video.device"],
            "enable"    : "return helper.has(${data.svc}, ['Video']) && helper.isSet(${video.device})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of device-dependent connection methods",
                "dialog/title"                      : "Build connection method list",
                "dialog/description"                : "Build list of connection methods to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Connection"]
                }
            },
            "default" : []
            }, {
            "name"      : "auth",
            "label"     : "Authentications",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of authentication methods",
                "dialog/title"                      : "Build authentication method list",
                "dialog/description"                : "Build list of authentication methods to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Authentication"]
                }
            },
            "default" : []
            }, {
            "name"      : "msgcat",
            "label"     : "API Category",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of API categories",
                "dialog/title"                      : "Build API category list",
                "dialog/description"                : "Build list of API categories to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "APICategory"]
                }
            },
            "default" : []
            },{
            "name"      : "api",
            "label"     : "API Name",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of API names",
                "dialog/title"                      : "Build API name list",
                "dialog/description"                : "Build list of API names to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "APIName"]
                }
            },
            "default" : []
            }, {
            "name"      : "response",
            "label"     : "API Response",
            "dependent" : ["video.api"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of API-dependent response codes",
                "dialog/title"                      : "Build API response list",
                "dialog/description"                : "Build list of API response codes to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Response"]
                }
            },
            "default" : []
            }, {
            "name"      : "state",
            "label"     : "States",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of states",
                "dialog/title"                      : "Build state list",
                "dialog/description"                : "Build list of states to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "State"]
                }
            },
            "default" : []
            }, {
            "name"      : "stream",
            "label"     : "Stream Type",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of stream types",
                "dialog/title"                      : "Build stream type list",
                "dialog/description"                : "Build list of stream types to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Stream"]
                }
            },
            "default" : []
            }, {
            "name"      : "channel",
            "label"     : "Channel",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of channels",
                "dialog/title"                      : "Build channel list",
                "dialog/description"                : "Build list of channels to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Channel"]
                }
            },
            "default" : []
            }, {
            "name" : "content",
            "label" : "Content",
            "dependent" : ["video.channel"],
            "enable" : "return helper.isSet(${video.channel})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of channel-dependent content",
                "dialog/title" : "Build content list",
                "dialog/description" : "Build list of content to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Content"]
                }
            },
            "default" : []
           }, {
            "name" : "company",
            "label" : "Company",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.app}, ['Quantum']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of company names",
                "dialog/title" : "Build company name list",
                "dialog/description" : "Build list of company names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "Company"]
                }
            },
            "default" : []
        }]
    },
    {
        "name"          : "video_apps",
        "label"         : "STVA Application Metric Dimensions",
        "name-style"    : "padding-left:0px;width:0px;",
        "value-style"   : "padding:0px;width:100%;",
        "display"       : "return helper.has(${data.svc}, ['Video']);",
        "dimensions" : [{
            "name" : "app_company",
            "label" : "App Company",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['DHCP_LL']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of company names",
                "dialog/title" : "Build company name list",
                "dialog/description" : "Build list of company names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "App Company"]
                }
            },
            "default" : []
        }, {
            "name" : "app_host",
            "label" : "App Host",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['DHCP_LL']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of host names",
                "dialog/title" : "Build host name list",
                "dialog/description" : "Build list of host names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "App Host"]
                }
            },
            "default" : []
        }, {
            "name" : "app_location",
            "label" : "App Location",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['IP2MAC', 'DHCP_LL']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of locations",
                "dialog/title" : "Build location list",
                "dialog/description" : "Build list of locations to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "App Location"]
                }
            },
            "default" : []
        }, {
            "name" : "app_cluster",
            "label" : "App Cluster",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['IP2MAC']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of cluster names",
                "dialog/title" : "Build cluster name list",
                "dialog/description" : "Build list of cluister names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "App Cluster"]
                }
            },
            "default" : []
        }, {
            "name" : "netserv_host",
            "label" : "NetServ Host",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['NetServ']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of host names",
                "dialog/title" : "Build host name list",
                "dialog/description" : "Build list of host names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "NetServ Host"]
                }
            },
            "default" : []
        }, {
            "name" : "netserv_company",
            "label" : "NetServ Company",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['NetServ']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of company names",
                "dialog/title" : "Build company name list",
                "dialog/description" : "Build list of company names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "NetServ Company"]
                }
            },
            "default" : []
        }, {
            "name" : "netserv_service",
            "label" : "NetServ Service",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['NetServ']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of services",
                "dialog/title" : "Build services list",
                "dialog/description" : "Build list of services to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "NetServ Service"]
                }
            },
            "default" : []
        }, {
            "name" : "netserv_customer_type",
            "label" : "NetServ Customer Type",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.app}, ['NetServ']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of customer types",
                "dialog/title" : "Build customer types list",
                "dialog/description" : "Build list of customer types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Metric", "NetServ Customer Type"]
                }
            },
            "default" : []
        }]
    },
    {
        "name"          : "video_calls",
        "label"         : "STVA Customer Call Dimensions",
        "name-style"    : "padding-left:0px;width:0px;",
        "value-style"   : "padding:0px;width:100%;",
        "display"       : "return helper.has(${data.svc}, ['Video']);",
        "dimensions" : [{
            "name" : "cmts",
            "label" : "CMTS",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of CMTS",
                "dialog/title" : "Build CMTS list",
                "dialog/description" : "Build list of CMTS to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "CMTS"]
                }
            },
            "default": []
        }, {
            "name" : "controller",
            "label" : "Controllers",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of controllers",
                "dialog/title" : "Build controller list",
                "dialog/description" : "Build list of controllers to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Controller"]
                }
            },
            "default": []
        }, {
            "name" : "state",
            "label" : "States",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of states",
                "dialog/title" : "Build state list",
                "dialog/description" : "Build list of states to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "State"]
                }
            },
            "default": []
        }, {
            "name" : "city",
            "label" : "Cities",
            "dependent" : ["video_calls.state"],
            "enable" : "return helper.isSet(${video_calls.state})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of state-dependent cities",
                "dialog/title" : "Build city list",
                "dialog/description" : "Build list of cities to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "City"]
                }
            },
            "default": []
        }, {
            "name" : "issue",
            "label" : "Issues",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of issues",
                "dialog/title" : "Build issue list",
                "dialog/description" : "Build list of issues to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Issue"]
                }
            },
            "default": []
        }, {
            "name" : "cause",
            "label" : "Causes",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of causes",
                "dialog/title" : "Build cause list",
                "dialog/description" : "Build list of causes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Cause"]
                }
            },
            "default": []
        }, {
            "name" : "resolution",
            "label" : "Resolutions",
            "dependent" : ["video_calls.cause"],
            "enable" : "return helper.isSet(${video_calls.cause})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of cause-dependent resolutions",
                "dialog/title" : "Build resolution list",
                "dialog/description" : "Build list of resolutions to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Resolution"]
                }
            },
            "default": []
       }, {
            "name" : "company",
            "label" : "Companies",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of companies",
                "dialog/title" : "Build company list",
                "dialog/description" : "Build list of companies to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Company"]
                }
            },
            "default": []
       }, {
            "name" : "market",
            "label" : "Markets",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of markets",
                "dialog/title" : "Build market list",
                "dialog/description" : "Build list of markets to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Market"]
                }
            },
            "default": []
       }, {
            "name" : "cust_type",
            "label" : "Customer Types",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of customer types",
                "dialog/title" : "Build customer type list",
                "dialog/description" : "Build list of customer types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Customer Type"]
                }
            },
            "default": []
       }, {
            "name" : "call_type",
            "label" : "Call Types",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of call types",
                "dialog/title" : "Build call type list",
                "dialog/description" : "Build list of call types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Call Type"]
                }
            },
            "default": []
       }, {
            "name" : "headend",
            "label" : "Headends",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Video']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of headends",
                "dialog/title" : "Build headend list",
                "dialog/description" : "Build list of headends to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Headend"]
                }
            },
            "default": []
       }, {
            "name" : "node",
            "label" : "Nodes",
            "dependent" : ["video_calls.headend"],
            "enable"    : "return helper.isSet(${video_calls.headend})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of headend-dependent nodes",
                "dialog/title" : "Build node list",
                "dialog/description" : "Build list of nodes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video"],
                    "module-context"  : ["Call", "Node"]
                }
            },
            "default": []
        }]
    },
    {
        "name"          : "video_network",
        "label"         : "STVA Network Metric Dimensions",
        "name-style"    : "padding-left:0px;width:0px;",
        "value-style"   : "padding:0px;width:100%;",
        "display"       : "return helper.has(${data.svc}, ['Video'])  && helper.has(${data.comp}, ['STVA Network']);",
        "dimensions" : [{
            "name"      : "location",
            "label"     : "Locations",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.svc}, ['Video']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of locations",
                "dialog/title"                      : "Build location list",
                "dialog/description"                : "Build list of locations to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video", "Network"],
                    "module-context"  : ["Metric", "Location"]
                }
            },
            "default": []
            }, {
            "name"      : "host",
            "label"     : "Hosts",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of hosts",
                "dialog/title"                      : "Build host list",
                "dialog/description"                : "Build list of hosts to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video", "Network"],
                    "module-context"  : ["Metric", "Host"]
                }
            },
            "default" : []
            }, {
            "name"      : "node",
            "label"     : "Interfaces",
            "dependent" : ["video_network.host"],
            "enable"    : "return helper.isSet(${video_network.host})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of host-dependent interfaces",
                "dialog/title"                      : "Build interface list",
                "dialog/description"                : "Build list of interfaces to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video", "Network"],
                    "module-context"  : ["Metric", "Node"]
                }
            },
            "default" : []
        },
        {
            "name"      : "ip",
            "label"     : "IP",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.svc}, ['Video']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of IP addresses",
                "dialog/title"                      : "Build IP list",
                "dialog/description"                : "Build list of IP addresses to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video", "Network"],
                    "module-context"  : ["Metric", "IP"]
                }
            },
            "default": []
            }, {
            "name"      : "usr",
            "label"     : "Users",
            "dependent" : ["data.metric"],
            "enable"    : "return helper.has(${data.svc}, ['Video']) && helper.isSet(${data.metric})",
            "type"      : "DualListBuilder",
            "type-params" : {
                "text/placeholder"                  : "List of users",
                "dialog/title"                      : "Build user list",
                "dialog/description"                : "Build list of users to filter on.",
                "dialog/widget/config/service/url"  : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Video", "Network"],
                    "module-context"  : ["Metric", "User"]
                }
            },
            "default": []
        }]
    }
]