[
    {
        "name" : "voice",
        "label" : "Voice Metric Dimensions",
        "name-style" : "padding-left:0px;width:0px;",
        "value-style" : "padding:0px;width:100%;",
        "display" : "return helper.has(${data.svc}, ['Voice']);",
        "dimensions" : [
        {
            "name" : "device_name",
            "label" : "Device Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of device names",
                "dialog/title" : "Build device name list",
                "dialog/description" : "Build list of device names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Device Name"]
                }
            },
            "default": []
        },{
            "name" : "client_site_name",
            "label" : "Client Site Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of client site names",
                "dialog/title" : "Build client site name list",
                "dialog/description" : "Build list of client site names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Client Site Name"]
                }
            },
            "default": []
        },{
            "name" : "server_site_name",
            "label" : "Server Site Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of server site names",
                "dialog/title" : "Build server site name list",
                "dialog/description" : "Build list of server site names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Server Site Name"]
                }
            },
            "default": []
        },{
            "name" : "application_protocol_type_code",
            "label" : "Application Protocol Type Code",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of application protocol type codes",
                "dialog/title" : "Build application protocol type codes list",
                "dialog/description" : "Build list of application protocol type codes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Application Protocol Type Code"]
                }
            },
            "default": []
        },{
            "name" : "application_name",
            "label" : "Application Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of application names",
                "dialog/title" : "Build application name list",
                "dialog/description" : "Build list of application names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Application Name"]
                }
            },
            "default": []
        },{
            "name" : "message_protocol_type_code",
            "label" : "Message Protocol Type Code",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of message protocol type codes",
                "dialog/title" : "Build message protocol type codes list",
                "dialog/description" : "Build list of message protocol type codes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Message Protocol Type Code"]
                }
            },
            "default": []
        },{
            "name" : "message_name",
            "label" : "Message Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of message names",
                "dialog/title" : "Build message name list",
                "dialog/description" : "Build list of message names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Message Name"]
                }
            },
            "default": []
        },{
            "name" : "response_code",
            "label" : "Response Code",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of response codes",
                "dialog/title" : "Build response code list",
                "dialog/description" : "Build list of response codes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Response Code"]
                }
            },
            "default": []
        },{
            "name" : "response_description",
            "label" : "Response Description",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of response descriptions",
                "dialog/title" : "Build response description list",
                "dialog/description" : "Build list of response descriptions to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Response Description"]
                }
            },
            "default": []
        },{
            "name" : "legacy_company",
            "label" : "Legacy Company",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of legacy companies",
                "dialog/title" : "Build legacy company list",
                "dialog/description" : "Build list of legacy companies to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Legacy Company"]
                }
            },
            "default": []
        },{
            "name" : "service_type",
            "label" : "Service Type",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of service types",
                "dialog/title" : "Build service type list",
                "dialog/description" : "Build list of service types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Service Type"]
                }
            },
            "default": []
        },{
            "name" : "agc_name",
            "label" : "AGC Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of AGC names",
                "dialog/title" : "Build AGC name list",
                "dialog/description" : "Build list of AGC names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "AGC"]
                }
            },
            "default": []
        },{
            "name" : "meta_name",
            "label" : "Meta Name",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of Meta names",
                "dialog/title" : "Build Meta name list",
                "dialog/description" : "Build list of Meta names to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "MetaName"]
                }
            },
            "default": []
        },
        {
            "name" : "location",
            "label" : "Location",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.isSet(${data.metric})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of Locations",
                "dialog/title" : "Build Location list",
                "dialog/description" : "Build list of Locations to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Metric", "Location"]
                }
            },
            "default": []
        }
    ]},
    {
        "name" : "voice_calls",
        "label" : "Voice Customer Call Dimensions",
        "name-style" : "padding-left:0px;width:0px;",
        "value-style" : "padding:0px;width:100%;",
        "display" : "return helper.has(${data.svc}, ['Voice']);",
        "dimensions" : [{
            "name" : "cmts",
            "label" : "CMTS",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of CMTS",
                "dialog/title" : "Build CMTS list",
                "dialog/description" : "Build list of CMTS to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "CMTS"]
                }
            },
            "default": []
        }, {
            "name" : "controller",
            "label" : "Controllers",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of controllers",
                "dialog/title" : "Build controller list",
                "dialog/description" : "Build list of controllers to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Controller"]
                }
            },
            "default": []
        }, {
            "name" : "state",
            "label" : "States",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of states",
                "dialog/title" : "Build state list",
                "dialog/description" : "Build list of states to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "State"]
                }
            },
            "default": []
        }, {
            "name" : "city",
            "label" : "Cities",
            "dependent" : ["voice_calls.state"],
            "enable" : "return helper.isSet(${voice_calls.state})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of state-dependent cities",
                "dialog/title" : "Build city list",
                "dialog/description" : "Build list of cities to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "City"]
                }
            },
            "default": []
        }, {
            "name" : "issue",
            "label" : "Issues",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of issues",
                "dialog/title" : "Build issue list",
                "dialog/description" : "Build list of issues to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Issue"]
                }
            },
            "default": []
        }, {
            "name" : "cause",
            "label" : "Causes",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of causes",
                "dialog/title" : "Build cause list",
                "dialog/description" : "Build list of causes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Cause"]
                }
            },
            "default": []
        }, {
            "name" : "resolution",
            "label" : "Resolutions",
            "dependent" : ["voice_calls.cause"],
            "enable" : "return helper.isSet(${voice_calls.cause})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of cause-dependent resolutions",
                "dialog/title" : "Build resolution list",
                "dialog/description" : "Build list of resolutions to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Resolution"]
                }
            },
            "default": []
       }, {
            "name" : "company",
            "label" : "Companies",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of companies",
                "dialog/title" : "Build company list",
                "dialog/description" : "Build list of companies to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Company"]
                }
            },
            "default": []
       }, {
            "name" : "market",
            "label" : "Markets",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of markets",
                "dialog/title" : "Build market list",
                "dialog/description" : "Build list of markets to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Market"]
                }
            },
            "default": []
       }, {
            "name" : "cust_type",
            "label" : "Customer Types",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of customer types",
                "dialog/title" : "Build customer type list",
                "dialog/description" : "Build list of customer types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Customer Type"]
                }
            },
            "default": []
       }, {
            "name" : "call_type",
            "label" : "Call Types",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of call types",
                "dialog/title" : "Build call type list",
                "dialog/description" : "Build list of call types to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Call Type"]
                }
            },
            "default": []
       }, {
            "name" : "headend",
            "label" : "Headends",
            "dependent" : ["data.metric"],
            "enable" : "return helper.has(${data.svc}, ['Voice']) && helper.has(${data.metric}, ['Customer Call Volume'])",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of headends",
                "dialog/title" : "Build headend list",
                "dialog/description" : "Build list of headends to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Headend"]
                }
            },
            "default": []
       }, {
            "name" : "node",
            "label" : "Nodes",
            "dependent" : ["voice_calls.headend"],
            "enable"    : "return helper.isSet(${voice_calls.headend})",
            "type": "DualListBuilder",
            "type-params" : {
                "text/placeholder" : "List of headend-dependent nodes",
                "dialog/title" : "Build node list",
                "dialog/description" : "Build list of nodes to filter on.",
                "dialog/widget/config/service/url" : "__OPTIONS_SERVICE__/getOptions",
                "dialog/widget/config/service/context" : {
                    "execute-context" : ["Voice"],
                    "module-context"  : ["Call", "Node"]
                }
            },
            "default": []
        }]
    }
]